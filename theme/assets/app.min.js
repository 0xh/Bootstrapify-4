(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var Bsify=require("./bsify.js"),CartJS=require("./../../bower_components/shopify-cartjs/dist/cart.js"),Lookbook=require("./bsify.lookbook_gallery.js"),Phd=require("./phd.js"),App=function(){if(CartJS.init(Bsify.cart,Bsify.money_formats),Bsify.product&&(Bsify.ImageSwitcher.preload_product_thumbs(),Bsify.ImageSwitcher.image_swticher(),Bsify.VariantOptionSwitcher.image_variant_switcher(),Bsify.linked_product_options&&Bsify.product.available&&Bsify.product.options.length>1&&Bsify.LinkedProductOptions.linkOptionSelectors(Bsify.product)),Bsify.ajax_add_to_cart&&Bsify.Cart.init(),Bsify.Thumbnails.init(),Bsify.Banner.init(),$(".collection-lookbook").length>0){var o=new Lookbook({gallery_wrapper:".collection-lookbook .products.group",item_wrapper:".group-item-wrap",controls_wrapper:".lookbook-controls"});o.on_loaded=function(){var o=$(".group-item-image").height();$(".lookbook-controls").height(o),Bsify.Thumbnails.orderly()}}Bsify.SocialFeeds.init(),new Phd},app=new App;module.exports=app;


},{"./../../bower_components/shopify-cartjs/dist/cart.js":2,"./bsify.js":15,"./bsify.lookbook_gallery.js":17,"./phd.js":38}],2:[function(require,module,exports){
(function(){var t,e,r,n,a,u,i=function(t,e){return function(){return t.apply(e,arguments)}};e=function(){function t(){this.update=i(this.update,this)}return t.prototype.update=function(t){var e,r,a;for(r in t)a=t[r],"items"!==r&&(this[r]=a);return this.items=function(){var r,a,u,i;for(u=t.items,i=[],r=0,a=u.length;a>r;r++)e=u[r],i.push(new n(e));return i}()},t}(),n=function(){function t(t){this.propertyArray=i(this.propertyArray,this),this.update=i(this.update,this),this.update(t)}return t.prototype.update=function(t){var e,n;for(e in t)n=t[e],"properties"!==e&&(this[e]=n);return this.properties=r.Utils.extend({},t.properties)},t.prototype.propertyArray=function(){var t,e,r,n;r=this.properties,n=[];for(t in r)e=r[t],n.push({name:t,value:e});return n},t}(),r={settings:{dataAPI:!0,requestBodyClass:null,rivetsModels:{},moneyFormat:null,moneyWithCurrencyFormat:null},cart:new e},r.init=function(t,e){return null==e&&(e={}),r.configure(e),r.cart.update(t),r.settings.dataAPI&&r.Data.init(),r.settings.requestBodyClass&&($(document).on("cart.requestStarted",function(){return $("body").addClass(r.settings.requestBodyClass)}),$(document).on("cart.requestComplete",function(){return $("body").removeClass(r.settings.requestBodyClass)})),r.Rivets.init()},r.configure=function(t){return null==t&&(t={}),r.Utils.extend(r.settings,t)},r.Utils={wrapKeys:function(t,e,r){var n,a,u;null==e&&(e="properties"),u={};for(n in t)a=t[n],u[""+e+"["+n+"]"]=null!=r?r:a;return u},unwrapKeys:function(t,e,r){var n,a,u,i;null==e&&(e="properties"),a={};for(n in t)i=t[n],u=n.replace(""+e+"[","").replace("]",""),a[u]=null!=r?r:i;return a},extend:function(t,e){var r,n;for(r in e)n=e[r],t[r]=n;return t},clone:function(t){var e,r;if(null==t||"object"!=typeof t)return t;r=new t.constructor;for(e in t)r[e]=clone(t[e]);return r},isArray:Array.isArray||function(t){return"[object Array]"==={}.toString.call(t)},ensureArray:function(t){return r.Utils.isArray(t)?t:null!=t?[t]:[]},formatMoney:function(t,e){var r;return null!=(null!=(r=window.Shopify)?r.formatMoney:void 0)?Shopify.formatMoney(t,e):t},getSizedImageUrl:function(t,e){var r,n;return null!=(null!=(r=window.Shopify)&&null!=(n=r.Image)?n.getSizedImageUrl:void 0)?Shopify.Image.getSizedImageUrl(t,e):t}},u=[],a=!1,r.Queue={add:function(t,e,n){var i;return null==n&&(n={}),i={url:t,data:e,type:n.type||"POST",dataType:n.dataType||"json",success:r.Utils.ensureArray(n.success),error:r.Utils.ensureArray(n.error),complete:r.Utils.ensureArray(n.complete)},n.updateCart&&i.success.push(r.cart.update),u.push(i),a?void 0:(jQuery(document).trigger("cart.requestStarted",[r.cart]),r.Queue.process())},process:function(){var t;return u.length?(a=!0,t=u.shift(),t.complete=r.Queue.process,jQuery.ajax(t)):(a=!1,void jQuery(document).trigger("cart.requestComplete",[r.cart]))}},r.Core={getCart:function(t){return null==t&&(t={}),t.type="GET",t.updateCart=!0,r.Queue.add("/cart.js",{},t)},addItem:function(t,e,n,a){var u;return null==e&&(e=1),null==n&&(n={}),null==a&&(a={}),u=r.Utils.wrapKeys(n),u.id=t,u.quantity=e,r.Queue.add("/cart/add.js",u,a),r.Core.getCart()},updateItem:function(t,e,n,a){var u;return null==n&&(n={}),null==a&&(a={}),u=r.Utils.wrapKeys(n),u.line=t,null!=e&&(u.quantity=e),a.updateCart=!0,r.Queue.add("/cart/change.js",u,a)},removeItem:function(t,e){return null==e&&(e={}),r.Core.updateItem(t,0,{},e)},updateItemById:function(t,e,n,a){var u;return null==n&&(n={}),null==a&&(a={}),u=r.Utils.wrapKeys(n),u.id=t,null!=e&&(u.quantity=e),a.updateCart=!0,r.Queue.add("/cart/change.js",u,a)},updateItemQuantitiesById:function(t,e){return null==t&&(t={}),null==e&&(e={}),e.updateCart=!0,r.Queue.add("/cart/update.js",{updates:t},e)},removeItemById:function(t,e){var n;return null==e&&(e={}),n={id:t,quantity:0},e.updateCart=!0,r.Queue.add("/cart/change.js",n,e)},clear:function(t){return null==t&&(t={}),t.updateCart=!0,r.Queue.add("/cart/clear.js",{},t)},getAttribute:function(t,e){return t in r.cart.attributes?r.cart.attributes[t]:e},setAttribute:function(t,e,n){var a;return null==n&&(n={}),a={},a[t]=e,r.Core.setAttributes(a,n)},getAttributes:function(){return r.cart.attributes},setAttributes:function(t,e){return null==t&&(t={}),null==e&&(e={}),e.updateCart=!0,r.Queue.add("/cart/update.js",r.Utils.wrapKeys(t,"attributes"),e)},clearAttributes:function(t){return null==t&&(t={}),t.updateCart=!0,r.Queue.add("/cart/update.js",r.Utils.wrapKeys(r.Core.getAttributes(),"attributes",""),t)},getNote:function(){return r.cart.note},setNote:function(t,e){return null==e&&(e={}),e.updateCart=!0,r.Queue.add("/cart/update.js",{note:t},e)}},t=jQuery(document),r.Data={init:function(){return r.Data.setEventListeners("on"),r.Data.render(null,r.cart)},destroy:function(){return r.Data.setEventListeners("off")},setEventListeners:function(e){return t[e]("click","[data-cart-add]",r.Data.add),t[e]("click","[data-cart-remove]",r.Data.remove),t[e]("click","[data-cart-remove-id]",r.Data.removeById),t[e]("click","[data-cart-update]",r.Data.update),t[e]("click","[data-cart-update-id]",r.Data.updateById),t[e]("click","[data-cart-clear]",r.Data.clear),t[e]("change","[data-cart-toggle]",r.Data.toggle),t[e]("change","[data-cart-toggle-attribute]",r.Data.toggleAttribute),t[e]("submit","[data-cart-submit]",r.Data.submit),t[e]("cart.requestComplete",r.Data.render)},add:function(t){var e;return t.preventDefault(),e=jQuery(this),r.Core.addItem(e.attr("data-cart-add"),e.attr("data-cart-quantity"))},remove:function(t){var e;return t.preventDefault(),e=jQuery(this),r.Core.removeItem(e.attr("data-cart-remove"))},removeById:function(t){var e;return t.preventDefault(),e=jQuery(this),r.Core.removeItemById(e.attr("data-cart-remove-id"))},update:function(t){var e;return t.preventDefault(),e=jQuery(this),r.Core.updateItem(e.attr("data-cart-update"),e.attr("data-cart-quantity"))},updateById:function(t){var e;return t.preventDefault(),e=jQuery(this),r.Core.updateItemById(e.attr("data-cart-update-id"),e.attr("data-cart-quantity"))},clear:function(t){return t.preventDefault(),r.Core.clear()},toggle:function(t){var e,n;return e=jQuery(this),n=e.attr("data-cart-toggle"),e.is(":checked")?r.Core.addItem(n):r.Core.removeItemById(n)},toggleAttribute:function(t){var e,n;return e=jQuery(this),n=e.attr("data-cart-toggle-attribute"),r.Core.setAttribute(n,e.is(":checked")?"Yes":"")},submit:function(t){var e,n,a,u;return t.preventDefault(),e=jQuery(this).serializeArray(),n=void 0,u=void 0,a={},jQuery.each(e,function(t,e){return"id"===e.name?n=e.value:"quantity"===e.name?u=e.value:a[e.name]=e.value}),r.Core.addItem(n,u,r.Utils.unwrapKeys(a))},render:function(t,e){var n;return n={item_count:e.item_count,total_price:e.total_price,total_price_money:r.Utils.formatMoney(e.total_price,r.settings.moneyFormat),total_price_money_with_currency:r.Utils.formatMoney(e.total_price,r.settings.moneyWithCurrencyFormat)},jQuery("[data-cart-render]").each(function(){var t;return t=jQuery(this),t.text(n[t.attr("data-cart-render")])})}},"rivets"in window?(r.Rivets={views:[],init:function(){return r.Rivets.bindViews()},destroy:function(){return r.Rivets.unbindViews()},bindViews:function(){var t;return r.Rivets.unbindViews(),t=r.Utils.extend({cart:r.cart},r.settings.rivetsModels),jQuery("[data-cart-view]").each(function(){return r.Rivets.views.push(rivets.bind(this,t))})},unbindViews:function(){var t,e,n,a;for(a=r.Rivets.views,e=0,n=a.length;n>e;e++)t=a[e],t.unbind();return r.Rivets.views=[]}},rivets.formatters.eq=function(t,e){return t===e},rivets.formatters.lt=function(t,e){return e>t},rivets.formatters.gt=function(t,e){return t>e},rivets.formatters.not=function(t){return!t},rivets.formatters.empty=function(t){return!t.length},rivets.formatters.plus=function(t,e){return parseInt(t)+parseInt(e)},rivets.formatters.minus=function(t,e){return parseInt(t)-parseInt(e)},rivets.formatters.prepend=function(t,e){return e+t},rivets.formatters.append=function(t,e){return t+e},rivets.formatters.money=function(t){return r.Utils.formatMoney(t,r.settings.moneyFormat)},rivets.formatters.money_with_currency=function(t){return r.Utils.formatMoney(t,r.settings.moneyWithCurrencyFormat)},rivets.formatters.productImageSize=function(t,e){return r.Utils.getSizedImageUrl(t,e)}):r.Rivets={init:function(){},destroy:function(){}},r.factory=function(t){return t.init=r.init,t.configure=r.configure,t.cart=r.cart,t.settings=r.settings,t.addItem=r.Core.addItem,t.updateItem=r.Core.updateItem,t.updateItemById=r.Core.updateItemById,t.updateItemQuantitiesById=r.Core.updateItemQuantitiesById,t.removeItem=r.Core.removeItem,t.clear=r.Core.clear,t.getAttribute=r.Core.getAttribute,t.setAttribute=r.Core.setAttribute,t.getAttributes=r.Core.getAttributes,t.setAttributes=r.Core.setAttributes,t.clearAttributes=r.Core.clearAttributes,t.getNote=r.Core.getNote,t.setNote=r.Core.setNote},"object"==typeof exports?r.factory(exports):"function"==typeof define&&define.amd?define(["exports"],function(t){return r.factory(this.CartJS=t),t}):r.factory(this.CartJS={})}).call(this);


},{}],3:[function(require,module,exports){
!function(e,t){"use strict";"function"==typeof define&&define.amd?define(["eventEmitter/EventEmitter","eventie/eventie"],function(i,n){return t(e,i,n)}):"object"==typeof exports?module.exports=t(e,require("wolfy87-eventemitter"),require("eventie")):e.imagesLoaded=t(e,e.EventEmitter,e.eventie)}(window,function(e,t,i){"use strict";function n(e,t){for(var i in t)e[i]=t[i];return e}function o(e){return"[object Array]"===d.call(e)}function r(e){var t=[];if(o(e))t=e;else if("number"==typeof e.length)for(var i=0,n=e.length;n>i;i++)t.push(e[i]);else t.push(e);return t}function s(e,t,i){if(!(this instanceof s))return new s(e,t);"string"==typeof e&&(e=document.querySelectorAll(e)),this.elements=r(e),this.options=n({},this.options),"function"==typeof t?i=t:n(this.options,t),i&&this.on("always",i),this.getImages(),c&&(this.jqDeferred=new c.Deferred);var o=this;setTimeout(function(){o.check()})}function h(e){this.img=e}function f(e){this.src=e,p[e]=this}var c=e.jQuery,a=e.console,u="undefined"!=typeof a,d=Object.prototype.toString;s.prototype=new t,s.prototype.options={},s.prototype.getImages=function(){this.images=[];for(var e=0,t=this.elements.length;t>e;e++){var i=this.elements[e];"IMG"===i.nodeName&&this.addImage(i);var n=i.nodeType;if(n&&(1===n||9===n||11===n))for(var o=i.querySelectorAll("img"),r=0,s=o.length;s>r;r++){var h=o[r];this.addImage(h)}}},s.prototype.addImage=function(e){var t=new h(e);this.images.push(t)},s.prototype.check=function(){function e(e,o){return t.options.debug&&u&&a.log("confirm",e,o),t.progress(e),i++,i===n&&t.complete(),!0}var t=this,i=0,n=this.images.length;if(this.hasAnyBroken=!1,!n)return void this.complete();for(var o=0;n>o;o++){var r=this.images[o];r.on("confirm",e),r.check()}},s.prototype.progress=function(e){this.hasAnyBroken=this.hasAnyBroken||!e.isLoaded;var t=this;setTimeout(function(){t.emit("progress",t,e),t.jqDeferred&&t.jqDeferred.notify&&t.jqDeferred.notify(t,e)})},s.prototype.complete=function(){var e=this.hasAnyBroken?"fail":"done";this.isComplete=!0;var t=this;setTimeout(function(){if(t.emit(e,t),t.emit("always",t),t.jqDeferred){var i=t.hasAnyBroken?"reject":"resolve";t.jqDeferred[i](t)}})},c&&(c.fn.imagesLoaded=function(e,t){var i=new s(this,e,t);return i.jqDeferred.promise(c(this))}),h.prototype=new t,h.prototype.check=function(){var e=p[this.img.src]||new f(this.img.src);if(e.isConfirmed)return void this.confirm(e.isLoaded,"cached was confirmed");if(this.img.complete&&void 0!==this.img.naturalWidth)return void this.confirm(0!==this.img.naturalWidth,"naturalWidth");var t=this;e.on("confirm",function(e,i){return t.confirm(e.isLoaded,i),!0}),e.check()},h.prototype.confirm=function(e,t){this.isLoaded=e,this.emit("confirm",this,t)};var p={};return f.prototype=new t,f.prototype.check=function(){if(!this.isChecked){var e=new Image;i.bind(e,"load",this),i.bind(e,"error",this),e.src=this.src,this.isChecked=!0}},f.prototype.handleEvent=function(e){var t="on"+e.type;this[t]&&this[t](e)},f.prototype.onload=function(e){this.confirm(!0,"onload"),this.unbindProxyEvents(e)},f.prototype.onerror=function(e){this.confirm(!1,"onerror"),this.unbindProxyEvents(e)},f.prototype.confirm=function(e,t){this.isConfirmed=!0,this.isLoaded=e,this.emit("confirm",this,t)},f.prototype.unbindProxyEvents=function(e){i.unbind(e.target,"load",this),i.unbind(e.target,"error",this)},s});


},{"eventie":4,"wolfy87-eventemitter":5}],4:[function(require,module,exports){
!function(e){"use strict";function n(n){var t=e.event;return t.target=t.target||t.srcElement||n,t}var t=document.documentElement,o=function(){};t.addEventListener?o=function(e,n,t){e.addEventListener(n,t,!1)}:t.attachEvent&&(o=function(e,t,o){e[t+o]=o.handleEvent?function(){var t=n(e);o.handleEvent.call(o,t)}:function(){var t=n(e);o.call(e,t)},e.attachEvent("on"+t,e[t+o])});var c=function(){};t.removeEventListener?c=function(e,n,t){e.removeEventListener(n,t,!1)}:t.detachEvent&&(c=function(e,n,t){e.detachEvent("on"+n,e[n+t]);try{delete e[n+t]}catch(o){e[n+t]=void 0}});var i={bind:o,unbind:c};"function"==typeof define&&define.amd?define(i):"object"==typeof exports?module.exports=i:e.eventie=i}(window);


},{}],5:[function(require,module,exports){
(function(){"use strict";function e(){}function t(e,t){for(var n=e.length;n--;)if(e[n].listener===t)return n;return-1}function n(e){return function(){return this[e].apply(this,arguments)}}var r=e.prototype,i=this,s=i.EventEmitter;r.getListeners=function(e){var t,n,r=this._getEvents();if(e instanceof RegExp){t={};for(n in r)r.hasOwnProperty(n)&&e.test(n)&&(t[n]=r[n])}else t=r[e]||(r[e]=[]);return t},r.flattenListeners=function(e){var t,n=[];for(t=0;t<e.length;t+=1)n.push(e[t].listener);return n},r.getListenersAsObject=function(e){var t,n=this.getListeners(e);return n instanceof Array&&(t={},t[e]=n),t||n},r.addListener=function(e,n){var r,i=this.getListenersAsObject(e),s="object"==typeof n;for(r in i)i.hasOwnProperty(r)&&-1===t(i[r],n)&&i[r].push(s?n:{listener:n,once:!1});return this},r.on=n("addListener"),r.addOnceListener=function(e,t){return this.addListener(e,{listener:t,once:!0})},r.once=n("addOnceListener"),r.defineEvent=function(e){return this.getListeners(e),this},r.defineEvents=function(e){for(var t=0;t<e.length;t+=1)this.defineEvent(e[t]);return this},r.removeListener=function(e,n){var r,i,s=this.getListenersAsObject(e);for(i in s)s.hasOwnProperty(i)&&(r=t(s[i],n),-1!==r&&s[i].splice(r,1));return this},r.off=n("removeListener"),r.addListeners=function(e,t){return this.manipulateListeners(!1,e,t)},r.removeListeners=function(e,t){return this.manipulateListeners(!0,e,t)},r.manipulateListeners=function(e,t,n){var r,i,s=e?this.removeListener:this.addListener,o=e?this.removeListeners:this.addListeners;if("object"!=typeof t||t instanceof RegExp)for(r=n.length;r--;)s.call(this,t,n[r]);else for(r in t)t.hasOwnProperty(r)&&(i=t[r])&&("function"==typeof i?s.call(this,r,i):o.call(this,r,i));return this},r.removeEvent=function(e){var t,n=typeof e,r=this._getEvents();if("string"===n)delete r[e];else if(e instanceof RegExp)for(t in r)r.hasOwnProperty(t)&&e.test(t)&&delete r[t];else delete this._events;return this},r.removeAllListeners=n("removeEvent"),r.emitEvent=function(e,t){var n,r,i,s,o=this.getListenersAsObject(e);for(i in o)if(o.hasOwnProperty(i))for(r=o[i].length;r--;)n=o[i][r],n.once===!0&&this.removeListener(e,n.listener),s=n.listener.apply(this,t||[]),s===this._getOnceReturnValue()&&this.removeListener(e,n.listener);return this},r.trigger=n("emitEvent"),r.emit=function(e){var t=Array.prototype.slice.call(arguments,1);return this.emitEvent(e,t)},r.setOnceReturnValue=function(e){return this._onceReturnValue=e,this},r._getOnceReturnValue=function(){return this.hasOwnProperty("_onceReturnValue")?this._onceReturnValue:!0},r._getEvents=function(){return this._events||(this._events={})},e.noConflict=function(){return i.EventEmitter=s,e},"function"==typeof define&&define.amd?define(function(){return e}):"object"==typeof module&&module.exports?module.exports=e:i.EventEmitter=e}).call(this);


},{}],6:[function(require,module,exports){
!function(t){var e=function(t,e){this.__init(t,e)},n=e,i=n.prototype;n.counter=0,i.__init=function(e,n){this.$elements=e,this.options=t.extend({},this.defaults,n)},i.defaults={resetHeight:""},i.attach=function(){void 0===this.attached&&(t(window).on("resize",this.handlers().resize),this.attached=!0)},i.handlers=function(){var t=this;return{resize:function(e){t._eachRow(function(e){t._resizeElements(e)})}}},i._columnCount=function(){var e=0,n=0,i=0;return this.$elements.each(function(){return n=t(this).offset().left,i+=1,e>=n&&0!==e?(i-=1,!1):void(e=n)}),i},i._eachRow=function(t){for(var e,n,i=this._dimensions(),r=0;r<i.r;r++)e=i.c*r,n=this.$elements.slice(e,e+i.c),t(n,r)},i._dimensions=function(){var t=this._columnCount(),e=Math.ceil(this.$elements.length/t);return{c:t,r:e}},i._resizeElements=function(e){var n=this._maxHeight(e),i=this.options;e.each(function(r,s){t(s).css("height",n),t(s).trigger("orderly.resize",[s,n,r,e.length,i])})},i._maxHeight=function(e){var n,i,r,s=0,h=this.options;return e.each(function(n,o){t(o).trigger("orderly.reset",[o,h.resetHeight,n,e.length,h]),t(o).css("height",h.resetHeight),r=o.getBoundingClientRect(),i=r.bottom-r.top,i>s&&(s=i)}),n=Math.round(s).toString(),n+="px"};var r={};r._delegate=function(t){var e="_"+(t&&t.method||"register"),n=r[e];n.call(this,t)},r._register=function(t){var n=new e(this,t);n.attach(),n.handlers().resize()},r._children=function(t){var e=this[0].children.length,i=n.counter++;r._childrenData.call(this,i),r._registerChildren(e,i,t),r._register.call(this,t)},r._childrenData=function(e){this.each(function(n,i){t(i.children).each(function(n,i){t(i).attr("data-orderly",e+":"+n)})})},r._registerChildren=function(t,e,n){for(var i=0;t>i;i++)r._register.call(r._find(e,i),n)},r._find=function(e,n){return t('[data-orderly="'+e+":"+n+'"]')},t.fn.orderly=function(t){return this.length>0&&r._delegate.call(this,t),this}}(jQuery);


},{}],7:[function(require,module,exports){
var imagesLoaded=require("imagesloaded");!function(t){var i=function(t,i){this.$ele=t,this.settings=i,this.formater=new e(this.$ele,this.settings),this.fitter=new a(this.$ele,this.settings),this.imageLoaded=imagesLoaded(this.$ele),this.addEventHandlers(),this.hideImages()};i.prototype.addEventHandlers=function(){var i=this;this.imageLoaded.on("done",function(){i.formater.setImageFormat(),i.fitter.setImageFit(),i.showImages(),i.$ele.trigger("ut_imageLoaded")});var e;t(window).resize(function(){e&&clearTimeout(e),e=setTimeout(function(){i.formater.setImageFormat(),i.fitter.setImageFit()},100)})},i.prototype.hideImages=function(){this.$ele.css({opacity:0,overflow:"hidden"})},i.prototype.showImages=function(){this.$ele.fadeTo(900,1)};var e=function(t,i){this.$wrapper=t,this.settings=i,this.ratio=this.getRatio()};e.prototype.setImageFormat=function(){var t=this.$wrapper.width()/this.ratio.width,i=t*this.ratio.height;this.$wrapper.height(i)},e.prototype.getRatio=function(){var t=this._getRatioString();return this._getRatioFromString(t)},e.prototype._getRatioString=function(){switch(this.settings.format){case"square":return"1:1";case"landscape":return this.settings.landscapeRatio;case"portrait":return this.settings.portraitRatio;default:return this.settings.ratio}},e.prototype._getRatioFromString=function(t){var i=t.split(":");return{width:i[0],height:i[1]}};var a=function(t,i){this.$wrapper=t,this.$image=this.$wrapper.find("img"),this.settings=i,this.wrapperRatio,this.imageRatio,this.imageNaturalWidth,this.imageNaturalHeight};a.prototype.setImageFit=function(){switch(this._resetImageCSS(),this.settings.fit){case"crop":this._cropImage();break;case"scale":this._scaleImage()}this._alignImage()},a.prototype._cropImage=function(){this._imageRatio()>this._wrapperRatio()?this._fitHorizontal():this._fitVertical()},a.prototype._scaleImage=function(){this._imageRatio()>this._wrapperRatio()?this._fitVertical():this._fitHorizontal()},a.prototype._fitHorizontal=function(){this._getNaturalHeight(this.$image)>=this.$wrapper.height()&&this.$image.height(this.$wrapper.height())},a.prototype._fitVertical=function(){this._getNaturalWidth(this.$image)>=this.$wrapper.width()&&this.$image.width(this.$wrapper.width())},a.prototype._imageRatio=function(){return this.imageRatio=this.imageRatio||this._getNaturalWidth(this.$image)/this._getNaturalHeight(this.$image),this.imageRatio},a.prototype._wrapperRatio=function(){return this.wrapperRatio=this.wrapperRatio||this.$wrapper.width()/this.$wrapper.height(),this.wrapperRatio},a.prototype._alignImage=function(){var t={};switch(t.marginLeft=(this.$wrapper.width()-this.$image.width())/2,this.settings.align){case"top":break;case"middle":t.marginTop=(this.$wrapper.height()-this.$image.height())/2;break;case"bottom":t.marginTop=this.$wrapper.height()-this.$image.height()}this.$image.css(t)},a.prototype._getNaturalHeight=function(t){return this.imageNaturalHeight||(t.prop("naturalHeight")?this.imageNaturalHeight=t.prop("naturalHeight"):this.imageNaturalHeight=this._getNaturalSize(t).height),this.imageNaturalHeight},a.prototype._getNaturalWidth=function(t){return this.imageNaturalWidth||(t.prop("naturalWidth")?this.imageNaturalWidth=t.prop("naturalWidth"):this.imageNaturalWidth=this._getNaturalSize(t).width),this.imageNaturalWidth},a.prototype._getNaturalSize=function(t){if(t.prop("src")){var i=new Image;return i.src=t.prop("src"),{width:i.width,height:i.height}}return!1},a.prototype._resetImageCSS=function(){this.$image.css({maxWidth:"none",width:"auto",height:"auto"})};var r=0,h=function(i){r++,r===i.length&&t(i).last().trigger("ut_complete")};t.fn.uniform_thumbnails=function(e){var a=t.extend({},t.fn.uniform_thumbnails.defaults,e),r=this;return r.each(function(){var e=t(this);e.data("_uniform_thumbnails",new i(e,a)),e.on("ut_imageLoaded",function(){h(r)})})},t.fn.uniform_thumbnails.defaults={fit:"crop",ratio:"1:1",format:"ratio",align:"middle",landscapeRatio:"4:3",portraitRatio:"3:4"}}(jQuery);


},{"imagesloaded":3}],8:[function(require,module,exports){
var docCookies={getItem:function(e){return e?decodeURIComponent(document.cookie.replace(new RegExp("(?:(?:^|.*;)\\s*"+encodeURIComponent(e).replace(/[\-\.\+\*]/g,"\\$&")+"\\s*\\=\\s*([^;]*).*$)|^.*$"),"$1"))||null:null},setItem:function(e,o,n,t,c,r){if(!e||/^(?:expires|max\-age|path|domain|secure)$/i.test(e))return!1;var s="";if(n)switch(n.constructor){case Number:s=n===1/0?"; expires=Fri, 31 Dec 9999 23:59:59 GMT":"; max-age="+n;break;case String:s="; expires="+n;break;case Date:s="; expires="+n.toUTCString()}return document.cookie=encodeURIComponent(e)+"="+encodeURIComponent(o)+s+(c?"; domain="+c:"")+(t?"; path="+t:"")+(r?"; secure":""),!0},removeItem:function(e,o,n){return this.hasItem(e)?(document.cookie=encodeURIComponent(e)+"=; expires=Thu, 01 Jan 1970 00:00:00 GMT"+(n?"; domain="+n:"")+(o?"; path="+o:""),!0):!1},hasItem:function(e){return e?new RegExp("(?:^|;\\s*)"+encodeURIComponent(e).replace(/[\-\.\+\*]/g,"\\$&")+"\\s*\\=").test(document.cookie):!1},keys:function(){for(var e=document.cookie.replace(/((?:^|\s*;)[^\=]+)(?=;|$)|^\s*|\s*(?:\=[^;]*)?(?:\1|$)/g,"").split(/\s*(?:\=[^;]*)?;\s*/),o=e.length,n=0;o>n;n++)e[n]=decodeURIComponent(e[n]);return e}};module.exports=docCookies;


},{}],9:[function(require,module,exports){
var DataModel=function(e,t){this.obj=e,this._build_properties(t)};DataModel.prototype._build_properties=function(e){var t=this;for(var o in e)e.hasOwnProperty(o)&&t._build_property_methods(o,e[o])},DataModel.prototype._build_property_methods=function(e,t){var o=e+"_selector";Object.defineProperty(this.obj,o,{value:t});var r,a=this;Object.defineProperty(this.obj,e,{enumerable:!0,configurable:!0,get:function(){return r},set:function(e){r!==e&&(r=e,a._update_elements(t,r))}})},DataModel.prototype._update_elements=function(e,t){var o=this;$(e).each(function(e,r){o._set_element_value(r,t)})},DataModel.prototype._set_element_value=function(e,t){var o=$(e);this._is_input(e)?o.val(t):o.html(t)},DataModel.prototype._is_input=function(e){var t=e.tagName.toLowerCase();return"input"===t||"select"===t||"textarea"===t},module.exports=DataModel;


},{}],10:[function(require,module,exports){
var Eventer=function(t){this.caller=t,this.caller._events={},this.caller.on=this.on,this.caller.off=this.off,this.caller.trigger=this.trigger};Eventer.prototype.on=function(t,e){return this._events[t]||(this._events[t]=[]),this._events[t].push(e),this._events[t].length-1},Eventer.prototype.off=function(t,e){t&&e?this._events[t][e]&&(this._events[t][e]=null):t?this._events[t]&&(this._events[t]=null):this._events={}},Eventer.prototype.trigger=function(t,e){"object"!=typeof e&&(e=[e]);for(var n in this._events[t]){var s=this._events[t][n];this._events[t].hasOwnProperty(n)&&"function"==typeof s&&s.apply(this,e)}},module.exports=Eventer;


},{}],11:[function(require,module,exports){
module.exports.getComputedStyle=function(){window.getComputedStyle||(window.getComputedStyle=function(t,e){return this.el=t,this.getPropertyValue=function(e){var r=/(\-([a-z]){1})/g;return"float"==e&&(e="styleFloat"),r.test(e)&&(e=e.replace(r,function(){return arguments[2].toUpperCase()})),t.currentStyle[e]?t.currentStyle[e]:null},this})},module.exports.objectKeys=function(){Object.keys||(Object.keys=function(){"use strict";var t=Object.prototype.hasOwnProperty,e=!{toString:null}.propertyIsEnumerable("toString"),r=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],o=r.length;return function(n){if("object"!=typeof n&&("function"!=typeof n||null===n))throw new TypeError("Object.keys called on non-object");var u,l,c=[];for(u in n)t.call(n,u)&&c.push(u);if(e)for(l=0;o>l;l++)t.call(n,r[l])&&c.push(r[l]);return c}}())};


},{}],12:[function(require,module,exports){
Banner={};var $banner=$("[data-banner]");Banner.init=function(){$banner.length>0&&Banner.add_event_handlers()},Banner.add_event_handlers=function(){$banner.on("slide.bs.carousel",function(n){var a=$(n.relatedTarget);$banner.attr("data-banner",a.data("slide"))}),$banner.on("slid.bs.carousel",function(){})},module.exports=Banner;


},{}],13:[function(require,module,exports){
var CartJS=require("./../../bower_components/shopify-cartjs/dist/cart.js"),Cart={},message_count=0,$cart_display_ele=$("[data-cart-display]"),$cart_total_ele=$("[data-cart-total]"),$cart_form_ele=$(Bsify.selectors.cart.form_selector),$cart_message_ele=$(Bsify.selectors.cart.message_selector);if(Bsify.product)var $product_form_ele=$(Bsify.selectors.product.form_selector),$product_form_button=$product_form_ele.find("input[type=submit]"),$product_form_message_ele=$(Bsify.selectors.product.form_message_selector);Cart.init=function(){$(document).on("cart.requestComplete",function(t,e){Cart.update_cart_display(),Cart.update_cart_table()}),Bsify.product&&$(document).on("submit",Bsify.selectors.product.form_selector,function(t){t.preventDefault();var e=$(t.currentTarget);Cart.add_item_to_cart(e)}),$(document).on("click","[data-remove-item]",function(t){t.preventDefault();var e=$(t.currentTarget);Cart.remove_item_from_cart(e)})},Cart.add_item_to_cart=function(t){var e=Cart.form_values(t.serializeArray()),r={},a=Bsify.get_variant_by_id(e.id),s=Bsify.product.title+Bsify.translations.product.item_title_seperator+a.title;$product_form_button.val(Bsify.translations.product.adding_to_cart_button_text),CartJS.addItem(e.id,e.quantity,r,{success:function(t,e,r){var a=Bsify.translations.product.after_product_added_message_html.replace("[item_title]",s);Cart.show_message($product_form_message_ele,"success",a),$product_form_button.val(Bsify.translations.product.added_to_cart_button_text)},error:function(t,e,r){console.log("[ERROR] - Add to cart:",t,e,r);var a=Bsify.translations.product.after_product_added_error_message_html.replace("[item_title]",s).replace("[error_message]",r);Cart.show_message($product_form_message_ele,"error",a),$product_form_button.val(Bsify.translations.product.unavailable_button_text)}})},Cart.remove_item_from_cart=function(t){var e=t.closest(Bsify.selectors.cart.item_selector),r=Cart.get_item_by_id(e.data("cart-item")),a=r.product_title+Bsify.translations.product.item_title_seperator+r.variant_title;CartJS.removeItem(t.data("remove-item"),{success:function(t,r,s){e.hide();var o=Bsify.translations.cart.remove_item_message.replace("[item_title]",a);Cart.show_message($cart_message_ele,"success",o)},error:function(t,e,r){console.log("[ERROR] - Remove item from cart:",t,e,r);var s=Bsify.translations.cart.remove_item_error_message.replace("[item_title]",a).replace("[error_message]",r);Cart.show_message($cart_message_ele,"success",s)}})},Cart.update_cart_display=function(){var t=Shopify.formatMoney(CartJS.cart.total_price,Bsify.money_formats.moneyFormat),e=Shopify.formatMoney(CartJS.cart.total_price,Bsify.money_formats.moneyWithCurrencyFormat),r=Bsify.translations.cart.cart_display_text.replace("[item_count]",CartJS.cart.item_count).replace("[cart_total_price]",t).replace("[cart_total_price_with_currency]",e);$cart_display_ele.html(r);var a=Bsify.translations.cart.cart_total.replace("[cart_total_price]",t).replace("[cart_total_price_with_currency]",e);$cart_total_ele.html(a)},Cart.update_cart_table=function(){0===CartJS.cart.item_count&&($cart_form_ele.hide(),$cart_message_ele.removeClass("hidden").html(Bsify.translations.cart.empty_cart_text))},Cart.show_message=function(t,e,r){message_count++,t.removeClass("hidden").html('<div class="note '+e+" message"+message_count+'">'+r+"</div>"),Cart.remove_message(message_count)},Cart.remove_message=function(t){setTimeout(function(){$(".message"+t).fadeOut(function(){$(this).remove()})},Bsify.message_timeout)},Cart.form_values=function(t){for(var e={},r=0;r<t.length;r++){var a=t[r];e[a.name]=a.value}return e},Cart.get_item_by_id=function(t){"string"==typeof t&&(t=parseInt(t));var e;if(CartJS)for(var r=0;r<CartJS.cart.items.length;r++){var a=CartJS.cart.items[r];a.variant_id===t&&(e=a)}return e},Cart.has_variant=function(t){"string"==typeof t&&(t=parseInt(t));var e=!1;if(CartJS)for(var r=0;r<CartJS.cart.items.length;r++){var a=CartJS.cart.items[r];a.variant_id===t&&(e=!0)}return e},module.exports=Cart;


},{"./../../bower_components/shopify-cartjs/dist/cart.js":2}],14:[function(require,module,exports){
var ImageSwitcher={};ImageSwitcher.preload_product_thumbs=function(){var e=$("[data-gallery-main]");if(e.length>0){var a=$(e.data("gallery-main"))[0],i=Shopify.Image.imageSize(a.src);e.length>0&&e.each(function(){var e=new Image,a=$(this).attr("href"),r=Shopify.Image.getSizedImageUrl(a,i);e.src=r})}},ImageSwitcher.image_swticher=function(){$(document).on("click","[data-gallery-main]",function(e){e.preventDefault();var a=$(e.currentTarget),i=$(a.data("gallery-main"))[0],r=a.attr("href");ImageSwitcher.switch_image(i,r)})},ImageSwitcher.switch_image=function(e,a){if(e&&a){var i=Shopify.Image.imageSize(e.src),r=Shopify.Image.getSizedImageUrl(a,i);e.src!==r&&(e.src=r)}},module.exports=ImageSwitcher;


},{}],15:[function(require,module,exports){
var Bsify=window.Bsify||{};Bsify.get_variant_by_id=function(i){var r;"string"==typeof i&&(i=parseInt(i));for(var s=0;s<Bsify.product.variants.length;s++){var e=Bsify.product.variants[s];e.id===i&&(r=e)}return r},Bsify.Cart=require("./bsify.cart.js"),Bsify.ImageSwitcher=require("./bsify.image_switcher.js"),Bsify.VariantOptionSwitcher=require("./bsify.variant_option_switcher.js"),Bsify.LinkedProductOptions=require("./bsify.linked_product_options.js"),Bsify.Banner=require("./bsify.banner.js"),Bsify.Thumbnails=require("./bsify.thumbnails.js"),Bsify.SocialFeeds=require("./bsify.social_feeds.js"),module.exports=Bsify;


},{"./bsify.banner.js":12,"./bsify.cart.js":13,"./bsify.image_switcher.js":14,"./bsify.linked_product_options.js":16,"./bsify.social_feeds.js":20,"./bsify.thumbnails.js":21,"./bsify.variant_option_switcher.js":23}],16:[function(require,module,exports){
var LinkedProductOptions={};LinkedProductOptions.optionsMap={},LinkedProductOptions.updateOptionsInSelector=function(o){var t,n;switch(o){case 0:t="root",n=jQuery(".single-option-selector:eq(0)");break;case 1:t=jQuery(".single-option-selector:eq(0)").val(),n=jQuery(".single-option-selector:eq(1)");break;case 2:t=jQuery(".single-option-selector:eq(0)").val(),t+=" / "+jQuery(".single-option-selector:eq(1)").val(),n=jQuery(".single-option-selector:eq(2)")}var i=n.val();n.empty();var e=LinkedProductOptions.optionsMap[t];if(void 0!==e){for(var p=0;p<e.length;p++){var s=e[p],r=jQuery("<option></option>").val(s).html(s);n.append(r)}jQuery('.swatch[data-option-index="'+o+'"] .swatch-element').each(function(){-1!==jQuery.inArray($(this).attr("data-value"),e)?$(this).removeClass("soldout").show().find(":radio").removeAttr("disabled","disabled").removeAttr("checked"):$(this).addClass("soldout").hide().find(":radio").removeAttr("checked").attr("disabled","disabled")}),-1!==jQuery.inArray(i,e)&&n.val(i),n.trigger("change")}},LinkedProductOptions.linkOptionSelectors=function(o){for(var t=0;t<o.variants.length;t++){var n=o.variants[t];if(n.available){var i;LinkedProductOptions.optionsMap.root=LinkedProductOptions.optionsMap.root||[],LinkedProductOptions.optionsMap.root.push(n.option1),LinkedProductOptions.optionsMap.root=Shopify.uniq(LinkedProductOptions.optionsMap.root),o.options.length>1&&(i=n.option1,LinkedProductOptions.optionsMap[i]=LinkedProductOptions.optionsMap[i]||[],LinkedProductOptions.optionsMap[i].push(n.option2),LinkedProductOptions.optionsMap[i]=Shopify.uniq(LinkedProductOptions.optionsMap[i])),3===o.options.length&&(i=n.option1+" / "+n.option2,LinkedProductOptions.optionsMap[i]=LinkedProductOptions.optionsMap[i]||[],LinkedProductOptions.optionsMap[i].push(n.option3),LinkedProductOptions.optionsMap[i]=Shopify.uniq(LinkedProductOptions.optionsMap[i]))}}LinkedProductOptions.updateOptionsInSelector(0),o.options.length>1&&LinkedProductOptions.updateOptionsInSelector(1),3===o.options.length&&LinkedProductOptions.updateOptionsInSelector(2),jQuery(".single-option-selector:eq(0)").change(function(){return LinkedProductOptions.updateOptionsInSelector(1),3===o.options.length&&LinkedProductOptions.updateOptionsInSelector(2),!0}),jQuery(".single-option-selector:eq(1)").change(function(){return 3===o.options.length&&LinkedProductOptions.updateOptionsInSelector(2),!0})},module.exports=LinkedProductOptions;


},{}],17:[function(require,module,exports){
var imgl=require("imagesloaded"),mq=require("./bsify.media_queries.js");require("./bsify.touch.js");var GalleryLoader=function(e,t){this.ele=e,this.parent_ele=t,this.onLoaded=function(){}};GalleryLoader.prototype.init=function(){this.$ele=$(this.ele),this.carousel_width=0,this.imgLoad=new imgl(this.ele);var e=this;this.imgLoad.on("progress",function(t,i){e._collect_image_width(i)}).on("done",function(){e._set_carousel_width(),e.onLoaded.apply(e)})},GalleryLoader.prototype._collect_image_width=function(e){if(e.isLoaded){var t=$(e.img),i=t.closest(this.parent_ele);this.carousel_width+=this._image_parents_width(i)}else $(e.img).hide()},GalleryLoader.prototype._image_parents_width=function(e){return e.width()+this._padding_to_num(e,"paddingLeft")+this._padding_to_num(e,"paddingRight")+1},GalleryLoader.prototype._padding_to_num=function(e,t){return parseInt(e.css(t).replace("px",""))},GalleryLoader.prototype._set_carousel_width=function(){this.$ele.width(this.carousel_width)};var Gallery=function(e){this.options=e,this.ele=this.options.gallery_wrapper,this.item_wrapper=this.options.item_wrapper,this.controls_wrapper=this.options.controls_wrapper,this.loader=new GalleryLoader(this.ele,this.options.item_wrapper),this.on_loaded=!1,this._init()};Gallery.prototype.update=function(){this.$ele.parent().animate({opacity:0},"slow"),this._remove_event_handlers(),this._init()},Gallery.prototype._init=function(){this.$ele=$(this.ele),this.$ele.length>0&&(this._add_event_handlers(),this.loader.init(),this._set_current_image())},Gallery.prototype._add_event_handlers=function(){var e=this;this.loader.onLoaded=function(){e.$ele.parent().animate({opacity:1},"slow"),e.on_loaded&&e.on_loaded.apply(e)},$(document).on("swipeLeft",this.controls_wrapper,function(t){e._next_img()}),$(document).on("swipeRight",this.controls_wrapper,function(t){e._prev_img()}),$(document).on("click","[data-gallery-direction]",function(t){t.preventDefault();var i=$(t.currentTarget);"left"===i.data("gallery-direction")?e._prev_img():e._next_img()})},Gallery.prototype._remove_event_handlers=function(){this.loader.onLoaded=!1,$(document).off("swipeLeft",this.controls_wrapper),$(document).off("swipeRight",this.controls_wrapper),$(document).off("click","[data-gallery-direction]")},Gallery.prototype._set_current_image=function(){var e=this.$ele.find(this.item_wrapper+".is_current");e.length>0?this.$current_image=e.first():this.$current_image=this.$ele.find(this.item_wrapper).first(),this.$current_image.addClass("is_current"),this._check_for_end()},Gallery.prototype._prev_img=function(){var e=this.$current_image.prev();e.length>0&&(e.css({marginLeft:"0"}).addClass("is_current"),this.$current_image.removeClass("is_current"),this.$current_image=e,this._check_for_end())},Gallery.prototype._next_img=function(){var e=this.$current_image.next();if(e.length>0){var t=this.loader._image_parents_width(this.$current_image);this.$current_image.css({marginLeft:-1*t}).removeClass("is_current"),e.addClass("is_current"),this.$current_image=e,this._check_for_end()}},Gallery.prototype._check_for_end=function(){$("[data-gallery-direction]").removeClass("disabled"),0===this.$current_image.prev().length?$('[data-gallery-direction="left"]').addClass("disabled"):0===this.$current_image.next().length&&$('[data-gallery-direction="right"]').addClass("disabled")},module.exports=Gallery;


},{"./bsify.media_queries.js":18,"./bsify.touch.js":22,"imagesloaded":3}],18:[function(require,module,exports){
require("./_polyfills.js").getComputedStyle(),module.exports.size=function(){return window.getComputedStyle(document.body,":after").getPropertyValue("content").replace(/['"]/g,"")};


},{"./_polyfills.js":11}],19:[function(require,module,exports){
var InstagramFeed=function(t){this.ele=t,this.$ele=$(this.ele),this.api_url="https://api.instagram.com/v1",this.request_queue=[],this.requesting=!1,this.image_count_default=12,this.image_count_buffer=10,this._get_data(),this._load_feed()};InstagramFeed.prototype._get_data=function(){this.client_id=this.$ele.data("client-id"),this.image_count=this.$ele.data("image-count")||this.image_count_default,this.image_total=this.image_count+this.image_count_buffer,this.hashtag=this.$ele.data("hashtag"),this.user=this.$ele.data("user"),this._get_user_id()},InstagramFeed.prototype._get_user_id=function(){this.user&&(this.request_queue.push("user_id"),this._start_requests())},InstagramFeed.prototype._load_feed=function(){var t;void 0!==this.hashtag?t="hashtag":void 0!==this.user&&(t="user"),this.request_queue.push(t),this._start_requests()},InstagramFeed.prototype._build_request=function(t){if(null===this.client_id)throw"[ERROR] Instagram: You must provide a client id";var e={};switch(e.data={client_id:this.client_id},t){case"user_id":e.url=this.api_url+"/users/search?q="+this.user,e.callback=function(t){this.user_id=t.data[0].id};break;case"user":e.url=this.api_url+"/users/"+this.user_id+"/media/recent",e.data=$.extend(e.data,{count:this.image_total}),e.callback=function(t){this._build_feed(t.data)};break;case"hashtag":e.url=this.api_url+"/tags/"+this.hashtag+"/media/recent",e.data=$.extend(e.data,{count:this.image_total}),e.callback=function(t){this._build_feed(t.data)}}return e},InstagramFeed.prototype._start_requests=function(){this.requesting||(this.requesting=!0,this._request())},InstagramFeed.prototype._request=function(){if(this.request_queue.length>0){var t=this,e=this.request_queue.shift(),a=this._build_request(e);$.ajax({dataType:"jsonp",url:a.url,data:a.data}).done(function(e){a.callback.apply(t,[e]),t._request()}).fail(function(t,e,a){console.log("fail",t,e,a)})}else this.requesting=!1},InstagramFeed.prototype._build_feed=function(t){var e,a=this._filter_data(t);a.length>0?(e=this._build_feed_markup(a),this.$ele.addClass("group").attr("data-group-size",a.length)):e=this._build_error_markup(),this.$ele.append(e)},InstagramFeed.prototype._filter_data=function(t){return t},InstagramFeed.prototype._build_feed_markup=function(t){for(var e="",a=t.length<this.image_count?t.length:this.image_count,i=0;a>i;i++){var s=t[i];s&&(e+=this._build_item_markup(s))}return e},InstagramFeed.prototype._build_item_markup=function(t){return'<div class="group-item-wrap">    <figure class="group-item thumbnail">      <a href="'+t.link+'">        <div class="group-item-image">          <img src="'+t.images.standard_resolution.url+'" alt="'+t.caption.text+'">        </div>        <figcaption class="group-item-details caption">          <p><span class="user">'+t.caption.from.username+"</span> "+t.caption.text+"</p>        </figcaption>      </a>    </figure>  </div>"},InstagramFeed.prototype._build_error_markup=function(t){return"<p>"+this.$ele.data("empty-message")+"</p>"},module.exports=InstagramFeed;


},{}],20:[function(require,module,exports){
var Instagram=require("./bsify.social_feed_instagram.js"),SocialFeeds={};SocialFeeds.init=function(){SocialFeeds.instagram()},SocialFeeds.instagram=function(){var e=SocialFeeds._get_elements("instagram");e.length>0&&e.each(function(){new Instagram(this)})},SocialFeeds._get_elements=function(e){var a='[data-social-feed="'+e+'"]';return $(a)},module.exports=SocialFeeds;


},{"./bsify.social_feed_instagram.js":19}],21:[function(require,module,exports){
require("uniformThumbnails"),require("jquery-orderly");var Thumbnails={};Thumbnails.init=function(){if(Bsify.thumbnail_settings.constrain_images){var i={};i.fit=Bsify.thumbnail_settings.crop_images?"crop":"scale",i.align=Bsify.thumbnail_settings.image_alignment.toLowerCase();var e=Bsify.thumbnail_settings.image_ratio.toLowerCase();"square"===e||"landscape"===e||"portrait"===e?i.format=e:i.ratio=e,$(Bsify.thumbnail_selectors.image_wrapper).uniform_thumbnails(i).on("ut_complete",function(){Thumbnails.orderly()})}else Thumbnails.orderly()},Thumbnails.orderly=function(){$(Bsify.thumbnail_selectors.details_wrapper).orderly({method:"children"})},module.exports=Thumbnails;


},{"jquery-orderly":6,"uniformThumbnails":7}],22:[function(require,module,exports){
var Swipe=function(){this.threshold=5,this.xDown=null,this.yDown=null,this.add_event_listeners()};Swipe.prototype.add_event_listeners=function(){var t=this;Element.prototype.addEventListener&&(document.addEventListener("touchstart",function(e){t.handleTouchStart(e)},!1),document.addEventListener("touchmove",function(e){t.handleTouchMove(e)},!1))},Swipe.prototype.handleTouchStart=function(t){this.xDown=t.touches[0].clientX,this.yDown=t.touches[0].clientY},Swipe.prototype.handleTouchMove=function(t){if(this.xDown&&this.yDown){var e=t.targetTouches[0].target,n=t.touches[0].clientX,i=t.touches[0].clientY,o=this.xDown-n,h=this.yDown-i;Math.abs(o)>Math.abs(h)?o>0?o>this.threshold&&$(e).trigger("swipeLeft"):-1*o>this.threshold&&$(e).trigger("swipeRight"):h>0?h>this.threshold&&$(e).trigger("swipeUp"):-1*h>this.threshold&&$(e).trigger("swipeDown"),this.xDown=null,this.yDown=null}},new Swipe;


},{}],23:[function(require,module,exports){
var VariantOptionSwitcher={};VariantOptionSwitcher.image_variant_switcher=function(){var t=$(Bsify.selectors.product.select_selector);$(document).on("click","[data-variant-id]",function(i){i.preventDefault();var r=$(i.currentTarget);t.val(r.data("variant-id")),VariantOptionSwitcher.update_product_selector_options(t)})},VariantOptionSwitcher.update_product_selector_options=function(t){var i=t.val(),r=Bsify.get_variant_by_id(i);if(r)for(var a=0;a<Bsify.product.options.length;a++){var e="option"+(a+1),n=r[e];$(".single-option-selector:eq("+a+")").val(n).trigger("change")}},module.exports=VariantOptionSwitcher;


},{}],24:[function(require,module,exports){
var SixPackBuilder=require("./phd.cart.sixpack.js"),MultiStepBuilder=require("./phd.cart.multistep.js"),StandardCart=require("./phd.cart.standard.js"),PhdCart=function(){var r=new StandardCart;new SixPackBuilder(r),new MultiStepBuilder(r)};module.exports=PhdCart;


},{"./phd.cart.multistep.js":25,"./phd.cart.sixpack.js":32,"./phd.cart.standard.js":33}],25:[function(require,module,exports){
var MultiStepBuilder=function(t){this.standard_cart=t};module.exports=MultiStepBuilder;


},{}],26:[function(require,module,exports){
var Eventer=require("./_eventer.js"),ItemsTotal=require("./phd.cart.sixpack.holder_total.js"),ItemsHolder=require("./phd.cart.sixpack.holder_items.js"),ItemsDisplay=require("./phd.cart.sixpack.holder_display.js"),ItemSubmitter=require("./phd.cart.sixpack.holder_submitter.js"),SixPackHolder=function(t){this.$ele=t,new Eventer(this);var e=this.$ele.data("phd-holding-limit-multiple")||6,i=this.$ele.data("phd-subscription-id"),r=this.$ele.data("phd-shipping-interval-frequency"),s=this.$ele.data("phd-shipping-interval-unit-type"),o=this.$ele.find("[data-phd-holding-items]"),d=this.$ele.find("form");this.items=new ItemsHolder("sixpack builder",e,i,r,s),this.items_display=new ItemsDisplay(o,e,this.items),this.total_display=new ItemsTotal(this.items),this.submitter=new ItemSubmitter(d,this.items),this._add_event_listeners()};SixPackHolder.prototype.add_to_holding=function(t){return this.items.add_item(t),this.items.item_count(t.id)},SixPackHolder.prototype.remove_from_holding=function(t){return this.items.remove_item(t),this.items.item_count(t)},SixPackHolder.prototype.update_item_in_holding=function(t,e){return this.items.update_item(t,e),this.items.item_count(t.id)},SixPackHolder.prototype._add_event_listeners=function(){var t=this;t.items_display.on("RemoveDisplayItem",function(e){t.items.remove_item(e);var i=[e,this.items.item_count(e)];t.trigger("RemoveItem",i)}),t.submitter.on("AddToCart",function(e){var i=t._build_products_for_cart(e);t.trigger("AddToCart",[i])}),t.items.on("ItemsCleared",function(){t.trigger("ItemsCleared")})},SixPackHolder.prototype._build_products_for_cart=function(t){var e="subscription"===t;return this.items.all_products_by_id(e)},module.exports=SixPackHolder;


},{"./_eventer.js":10,"./phd.cart.sixpack.holder_display.js":27,"./phd.cart.sixpack.holder_items.js":28,"./phd.cart.sixpack.holder_submitter.js":29,"./phd.cart.sixpack.holder_total.js":30}],27:[function(require,module,exports){
var Eventer=require("./_eventer.js"),SixPackHolderItemsDisplay=function(t,i,e){this.$ele=t,this.items=e,this.limit_multiple=i,this.tooltip_selector='[data-toggle="tooltip"]',this.default_color="#E0F0D9",new Eventer(this),this._add_event_listeners(),this.reset()};SixPackHolderItemsDisplay.prototype.update=function(t){this._clear_display_items(),this._redraw_display_items(),this._update_display_items(),this._add_tooltips(),t&&"added"===t&&this._scroll_container()},SixPackHolderItemsDisplay.prototype.reset=function(){this._clear_display_items(),this._build_empty_display_items(),this._add_tooltips()},SixPackHolderItemsDisplay.prototype._add_event_listeners=function(){var t=this;t.items.on("ItemsUpdated",function(i,e){t.update(e)}),t.$ele.on("click",".holding-item",function(i){i.preventDefault(),t._remove_item(i)})},SixPackHolderItemsDisplay.prototype._redraw_display_items=function(){for(var t=this.items.total_count(),i=Math.floor(t/this.limit_multiple)+1,e=0;i>e;e++)this._build_empty_display_items()},SixPackHolderItemsDisplay.prototype._clear_display_items=function(){this._remove_tooltips(),this.$ele.html("")},SixPackHolderItemsDisplay.prototype._build_empty_display_items=function(){for(var t="",i=0;i<this.limit_multiple;i++)t+=this._empty_display_item_markup();this.$ele.append('<div class="holding-item-group">'+t+"</div>")},SixPackHolderItemsDisplay.prototype._empty_display_item_markup=function(){return'<a class="holding-item holding-item-disabled" data-toggle="tooltip" data-placement="right" data-phd-item-id title="Empty item slot">    <span class="fa fa-times-circle"></span>    <svg version="1.2" baseprofile="tiny" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewbox="0 0 150 400" xml:space="preserve"> <path d="M64.2,9.6c-4.7,0.3-9.3,0.6-13.9,1.9c-3.6,1.1-5.6,3.7-6,7c-0.9,7.5-1.8,15-1.3,22.5c0.2,2.2,1.7,4.1,1.7,6.5,c0,2.5,0.4,4.9,0.7,7.4c0.1,1.2-0.6,1.6-1.6,1.8c-1.3,0.3-2.4,0.9-2.8,2.4c-0.7,2.9-0.4,3.4,2.6,3.9c1.2,0.2,1.8,0.7,1.8,2,c-0.1,2.7,0,5.3,0,8c0,0.8-0.1,1.5-0.9,2c-8.4,3.8-18.1,15.8-18.1,15.8c-5.8,7.6-9.3,16.1-11.6,25.4c-1.1,4.4-1,8.7-1.1,13.1,l-0.2,211.4c-0.2,11.5-0.4,22.9,0.2,34.4c0.4,8,4.8,12.5,13.5,14.1c5.5,1,11,1.3,16.5,1.6c8.1,0.3,18.1,0.1,26.2,0.2h10.2,c8.1,0,18.1,0.2,26.2-0.2c5.5-0.2,11-0.5,16.5-1.6c8.7-1.6,13.1-6.1,13.5-14.1c0.6-11.5,0.3-22.9,0.2-34.4l-0.2-211.4,c0-4.4,0.1-8.7-1.1-13.1c-2.3-9.2-5.9-17.7-11.6-25.4c0,0-8-11.3-18.1-15.8c-0.8-0.5-0.9-1.2-0.9-2c0-2.7,0-5.3,0-8,c0-1.3,0.6-1.8,1.8-2c2.9-0.5,3.2-1,2.6-3.9c-0.4-1.5-1.5-2.1-2.8-2.4c-1-0.2-1.7-0.7-1.6-1.8c0.2-2.5,0.6-4.9,0.7-7.4,c0-2.3,1.6-4.2,1.7-6.5c0.5-7.6-0.3-15.1-1.3-22.5c-0.4-3.3-2.4-5.9-6-7c-4.6-1.3-9.2-1.6-13.9-1.9C75.3,8.5,64.2,9.6,64.2,9.6,c-4.7,0.3-9.3,0.6-13.9,1.9c-3.6,1.1-5.6,3.7-6,7c-0.9,7.5-1.8,15-1.3,22.5c0.2,2.2,1.7,4.1,1.7,6.5c0,2.5,0.4,4.9,0.7,7.4,c0.1,1.2-0.6,1.6-1.6,1.8c-1.3,0.3-2.4,0.9-2.8,2.4c-0.7,2.9-0.4,3.4,2.6,3.9c1.2,0.2,1.8,0.7,1.8,2c-0.1,2.7,0,5.3,0,8,c0,0.8-0.1,1.5-0.9,2"></path> </svg>  </a>'},SixPackHolderItemsDisplay.prototype._update_display_items=function(){for(var t=this.items.total_count(),i=0;t>i;i++){var e=this.items.product_by_index(i),s=this.$ele.find(".holding-item").eq(i);s.removeClass("holding-item-disabled").attr("title","Remove "+e.title).attr("data-phd-item-id",e.id).data("phd-item-id",e.id),e.color&&s.find("path").css({fill:("#"!==e.color[0]?"#":"")+e.color})}},SixPackHolderItemsDisplay.prototype._scroll_container=function(){var t=$(".holding-item-group"),i=parseInt(t.css("margin-left"))+parseInt(t.css("margin-right")),e=(t.width()+i)*t.length,s=t.parent(),l=e-s.width();this.$ele.animate({scrollLeft:l},186)},SixPackHolderItemsDisplay.prototype._add_tooltips=function(){$(this.tooltip_selector).tooltip()},SixPackHolderItemsDisplay.prototype._remove_tooltips=function(){$(this.tooltip_selector).tooltip("destroy")},SixPackHolderItemsDisplay.prototype._remove_item=function(t){var i=$(t.currentTarget);if(!i.hasClass("holding-item-disabled")){var e=[i.data("phd-item-id")];this.trigger("RemoveDisplayItem",e)}},module.exports=SixPackHolderItemsDisplay;


},{"./_eventer.js":10}],28:[function(require,module,exports){
var Eventer=require("./_eventer.js"),SixPackHolderItems=function(t,i,e,r,o){new Eventer(this),this.id=t,this.products=[],this.products_are_addable=!1,this.limit_multiple=i,this.subscription_id=e,this.shipping_interval_frequency=r,this.shipping_interval_unit_type=o};SixPackHolderItems.prototype.add_item=function(t){this.products.push(t),this._update_is_addable_and_trigger("ItemAdded",[t.id,"added"])},SixPackHolderItems.prototype.remove_item=function(t){for(var i=this.total_count(),e=i-1;e>-1;e--){var r=this._remove_product_from_stack(t,e);if(r)break}this._update_is_addable_and_trigger("ItemRemoved",[t,"removed"])},SixPackHolderItems.prototype.update_item=function(t,i){for(var e=this.item_count(t.id),r=this.total_count(),o=r-1;o>-1;o--)this._remove_product_from_stack(t.id,o);if(i>0)for(var s=0;i>s;s++)this.products.push(t);var d=e>i?"removed":"added";this._update_is_addable_and_trigger("ItemUpdated",[t.id,d])},SixPackHolderItems.prototype.clear=function(){var t=this.all_products_by_id();for(var i in t)if(t.hasOwnProperty(i)){var e=t[i];this.update_item(e,0)}this.trigger("ItemsCleared")},SixPackHolderItems.prototype.item_count=function(t){for(var i=0,e=0;e<this.products.length;e++)this.products[e].id===t&&i++;return i},SixPackHolderItems.prototype.total_count=function(){return this.products.length},SixPackHolderItems.prototype.total_price=function(){for(var t=0,i=0;i<this.products.length;i++){var e=this.products[i];t+=e.price}return Shopify.formatMoney(t,Bsify.money_formats.moneyFormat)},SixPackHolderItems.prototype.product_by_index=function(t){return this.products[t]},SixPackHolderItems.prototype.all_products_by_id=function(t){for(var i={},e=0;e<this.products.length;e++){var r=this.products[e];i[r.id]?i[r.id].qty++:(i[r.id]={id:r.id,title:r.title,price:r.price,qty:1,properties:{added_by:this.id}},t&&(i[r.id].properties.shipping_interval_frequency=this.shipping_interval_frequency,i[r.id].properties.shipping_interval_unit_type=this.shipping_interval_unit_type,i[r.id].properties.subscription_id=this.subscription_id))}return i},SixPackHolderItems.prototype._remove_product_from_stack=function(t,i){var e=[];return this.products[i].id===t&&(e=this.products.splice(i,1)),e.length>0},SixPackHolderItems.prototype._update_is_addable_and_trigger=function(t,i){this.products_are_addable=this._is_addable(),this.trigger(t,i),this.trigger("ItemsUpdated",i)},SixPackHolderItems.prototype._is_addable=function(){var t=this.total_count(),i=t%this.limit_multiple;return t>0&&0===i},module.exports=SixPackHolderItems;


},{"./_eventer.js":10}],29:[function(require,module,exports){
var Eventer=require("./_eventer.js"),Modal=require("./phd.modal.js"),SixPackHolderItemSubmitter=function(t,e){new Eventer(this),this.$ele=t,this.items=e,this.$submit=t.find('[type="submit"]'),this.modal=new Modal,this._add_event_listeners()};SixPackHolderItemSubmitter.prototype._add_event_listeners=function(){var t=this;t.$ele.on("submit",function(e){e.preventDefault(),t._open_modal()}),$(document).on("click","[data-phd-add-to-cart-as]",function(e){var a=$(e.currentTarget),o=a.data("phd-add-to-cart-as");t.trigger("AddToCart",[o]),t.modal.close()}),t.items.on("ItemsUpdated",function(){t._toggle_submitablity()})},SixPackHolderItemSubmitter.prototype._toggle_submitablity=function(){this.items.products_are_addable?this.$submit.prop("disabled",!1):this.$submit.prop("disabled",!0)},SixPackHolderItemSubmitter.prototype._open_modal=function(){this.modal.content=this._add_to_cart_modal_markup(),this.modal.open()},SixPackHolderItemSubmitter.prototype._add_to_cart_modal_markup=function(){return'<div class="modal-header">    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span class="fa fa-times" aria-hidden="true"></span></button>    <h1>How do you want to get your order?</h1>  </div>  <div class="modal-body">    <button type="button" class="btn btn-default btn-lg" data-phd-add-to-cart-as="single"><strong>Add to cart</strong> as a one off purcahse</button>    <button type="button" class="btn btn-primary btn-lg" data-phd-add-to-cart-as="subscription">Get $10 off your order if you <strong>Subscribe now!</strong></button>  </div>'},SixPackHolderItemSubmitter.prototype._completed_modal_markup=function(t){return'<div class="modal-header">    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span class="fa fa-times" aria-hidden="true"></span></button>    <h1>Thanks, your order is being added to the cart</h1>  </div>  <div class="modal-body">    <p>'+t+"</p>  </div>"},module.exports=SixPackHolderItemSubmitter;


},{"./_eventer.js":10,"./phd.modal.js":39}],30:[function(require,module,exports){
var DataModel=require("./_data_model.js"),SixPackHolderTotal=function(t){this.items=t,new DataModel(this,{limit:"[data-phd-holding-items-limit]",total_items:"[data-phd-holding-total-items]",total_price:"[data-phd-holding-total-price]"}),this._add_event_listeners(),this.update()};SixPackHolderTotal.prototype.update=function(){this.total_items=this.items.total_count(),this.total_price=this.items.total_price();var t=this.items.limit_multiple*Math.ceil(this.total_items/this.items.limit_multiple);this.limit=t>0?t:this.items.limit_multiple},SixPackHolderTotal.prototype._add_event_listeners=function(){var t=this;t.items.on("ItemsUpdated",function(){t.update()})},module.exports=SixPackHolderTotal;


},{"./_data_model.js":9}],31:[function(require,module,exports){
var Eventer=require("./_eventer.js"),DataModel=require("./_data_model.js"),Modal=require("./phd.modal.js"),SixPackItem=function(t,e){this.$ele=t,this.id=e,new Eventer(this),new DataModel(this,{count:"[data-phd-item-"+this.id+"-count]"}),this.modal=new Modal,this.variant_id=this.$ele.data("phd-variant-id"),this.product_title=this.$ele.data("phd-product-title"),this.product_price=this.$ele.data("phd-product-price"),this.product_color=this.$ele.data("phd-product-color"),this.product={id:this.variant_id,title:this.product_title,price:this.product_price,color:this.product_color},this._add_event_listeners()};SixPackItem.prototype._add_event_listeners=function(){var t=this;t.$ele.on("click","[data-phd-add-item]",function(e){e.preventDefault(),e.currentTarget.blur(),t._trigger_add_to()}),t.$ele.on("click","[data-phd-remove-item]",function(e){e.preventDefault(),e.currentTarget.blur(),t._trigger_remove_from()}),t.$ele.on("blur","[data-phd-edit-item]",function(e){var r=parseInt(e.currentTarget.value);t._trigger_update_holding(r)}),t.$ele.on("keyup","[data-phd-edit-item]",function(e){if(13===e.keyCode){var r=parseInt(e.currentTarget.value);t._trigger_update_holding(r)}}),t.$ele.on("click","[data-phd-modal]",function(e){e.preventDefault();var r=$(e.currentTarget),i=r.attr("href");t.modal.open(),$.ajax(i).done(function(e){t.modal.content=e})})},SixPackItem.prototype._trigger_add_to=function(){var t=[this.product];this.trigger("AddToHolding",t)},SixPackItem.prototype._trigger_remove_from=function(){var t=[this.variant_id];this.trigger("RemoveFromHolding",t)},SixPackItem.prototype._trigger_update_holding=function(t){var e=[this.product,t];this.trigger("UpdateHolding",e)},module.exports=SixPackItem;


},{"./_data_model.js":9,"./_eventer.js":10,"./phd.modal.js":39}],32:[function(require,module,exports){
var ProductItem=require("./phd.cart.sixpack.item.js"),ProductHolder=require("./phd.cart.sixpack.holder.js"),SixPackBuilder=function(t){this.cart=t,this.holding_ele_selector='[data-phd-six-pack="holding"]',this.item_ele_selector='[data-phd-six-pack="item"]',this.items={},this._init_holder(),this._init_items()};SixPackBuilder.prototype._init_holder=function(){var t=this,o=$(this.holding_ele_selector);t.product_holder=new ProductHolder(o),t.product_holder.on("AddToCart",function(o){t.cart.add_products(o),t.product_holder.items.clear()}),t.product_holder.on("RemoveItem",function(o,e){t.items[o].holding_count=e}),t.product_holder.on("ItemsCleared",function(){for(var o in t.items){var e=t.items[o];e.count=""}})},SixPackBuilder.prototype._init_items=function(){var t=this,o=$(this.item_ele_selector);o.each(function(o,e){var i=$(e),r=new ProductItem(i,o);t.items[r.variant_id]=r,r.on("AddToHolding",function(o){var e=t.product_holder.add_to_holding(o);r.count=e}),r.on("RemoveFromHolding",function(o){var e=t.product_holder.remove_from_holding(o);r.count=e>0?e:""}),r.on("UpdateHolding",function(o,e){var i=t.product_holder.update_item_in_holding(o,e);r.count=i>0?i:""})})},module.exports=SixPackBuilder;


},{"./phd.cart.sixpack.holder.js":26,"./phd.cart.sixpack.item.js":31}],33:[function(require,module,exports){
var CartJS=require("./../../bower_components/shopify-cartjs/dist/cart.js"),CartDisplay=require("./phd.cart.standard_display.js"),CartOffCanvas=require("./phd.cart.standard_offcanvas.js"),StandardCart=function(){var t='a[href="/cart"]';this.off_canvas=new CartOffCanvas(t),this.display=new CartDisplay,this._add_event_listeners()};StandardCart.prototype.add_products=function(t){for(var a in t)if(t.hasOwnProperty(a)){var r=t[a];this.add_product(r)}},StandardCart.prototype.add_product=function(t){var a=this;a.display.update_cart_item(t),CartJS.addItem(t.id,t.qty,t.properties,{success:function(t,r,d){a._item_added_success(t,r,d)},error:function(t,r,d){a._item_added_error(t,r,d)}})},StandardCart.prototype._add_event_listeners=function(){var t=this;$(document).on("cart.requestComplete",function(a,r){console.log("cart.requestComplete",a,r),t.display.update(r)})},StandardCart.prototype._item_added_success=function(t,a,r){},StandardCart.prototype._item_added_error=function(t,a,r){console.log("Item added: error",t,a,r)},module.exports=StandardCart,window.CartJS=CartJS;


},{"./../../bower_components/shopify-cartjs/dist/cart.js":2,"./phd.cart.standard_display.js":34,"./phd.cart.standard_offcanvas.js":37}],34:[function(require,module,exports){
var DataModel=require("./_data_model.js"),CartItems=require("./phd.cart.standard_display_items.js"),StandardCartDisplay=function(){this.$details=$(".side-cart-details"),this.$empty_message=$(".side-cart-empty"),this.section_empty_message_selector=".side-cart-section-empty";var t=".phd-side-cart-item-template",e="[data-phd-side-cart-item]",s="[data-phd-side-cart-items-subscription]",a="[data-phd-side-cart-items-one-off]";this.subscription_items=new CartItems(s,e,t),this.one_off_items=new CartItems(a,e,t),this.item_groups=[this.subscription_items,this.one_off_items]};StandardCartDisplay.prototype.update=function(t){this.clear();for(var e=0;e<t.items.length;e++){var s=t.items[e];this.update_cart_item(s)}this._update_cart_empty_state()},StandardCartDisplay.prototype.update_cart_item=function(t){console.log("update_cart_item",t),void 0!==t.properties.subscription_id?this.subscription_items.update_cart_item(t):this.one_off_items.update_cart_item(t)},StandardCartDisplay.prototype.clear=function(){this._each(function(t,e){e.clear_items()})},StandardCartDisplay.prototype._update_cart_empty_state=function(){var t=0;this._each(function(e,s){var a=s.count();a>0?(s.$items_wrapper.next(this.section_empty_message_selector).hide(),t+=a):s.$items_wrapper.next(this.section_empty_message_selector).show()}),t>0?(this.$empty_message.hide(),this.$details.show()):(this.$empty_message.show(),this.$details.hide())},StandardCartDisplay.prototype._each=function(t){for(var e=0;e<this.item_groups.length;e++){var s=this.item_groups[e];t(e,s)}},module.exports=StandardCartDisplay;


},{"./_data_model.js":9,"./phd.cart.standard_display_items.js":36}],35:[function(require,module,exports){
var DataModel=require("./_data_model.js"),StandardCartDisplayItem=function(t,e,i){this.id=i,this.item_selector=e.replace("]",'="'+this.id+'"]'),this.items_wrapper_selector=t,this.selector=this.items_wrapper_selector+" "+this.item_selector,this.$ele=$(this.item_selector),this.price_tempate=this.$ele.find(".phd-side-cart-item-price-template").html(),new DataModel(this,{title:this.selector+" [data-phd-side-cart-item-title]",quantity:this.selector+" [data-phd-side-cart-item-qty]",price:this.selector+" [data-phd-side-cart-item-price]",line_price:this.selector+" [data-phd-side-cart-item-line-price]"})};StandardCartDisplayItem.prototype.update=function(t){this.quantity=t.quantity,this.price=this._price_markup(t.price),this.line_price=this._price_markup(t.line_price),void 0===this.title&&(this.title=t.title)},StandardCartDisplayItem.prototype._price_markup=function(t){var e=Shopify.formatMoney(t,Bsify.money_formats.moneyFormat),i=Shopify.formatMoney(t,Bsify.money_formats.moneyWithCurrencyFormat);return this.price_tempate.replace("[ITEM_PRICE_DATA]",t).replace("[ITEM_PRICE]",e).replace("[ITEM_PRICE_WITH_CURRENCY]",i)},module.exports=StandardCartDisplayItem;


},{"./_data_model.js":9}],36:[function(require,module,exports){
require("./_polyfills.js").objectKeys();var CartItem=require("./phd.cart.standard_display_item.js"),StandardCartDisplayItems=function(t,e,i){this.items={},this.item_selector=e,this.items_wrapper_selector=t,this.$items=$(e),this.$items_wrapper=$(t),this.$item_template=$(i),this.item_id_data_attr=e.replace(/\[|\]/g,""),this.item_id_data=this.item_id_data_attr.replace("data-",""),this._collect_items_from_dom()};StandardCartDisplayItems.prototype.update_cart_item=function(t){this.has_item(t.id)?this.items[t.id].update(t):this._build_new_item(t)},StandardCartDisplayItems.prototype.has_item=function(t){var e=!1;for(var i in this.items)if(i===t.toString()){e=!0;break}return e},StandardCartDisplayItems.prototype.count=function(){return Object.keys(this.items).length},StandardCartDisplayItems.prototype.clear_items=function(){this.items={},this.$items_wrapper.html("")},StandardCartDisplayItems.prototype._add_new_item=function(t){this.items[t]=new CartItem(this.items_wrapper_selector,this.item_selector,t)},StandardCartDisplayItems.prototype._collect_items_from_dom=function(){var t=this;this.$items.each(function(e,i){var a=$(i),s=a.data(t.item_id_data);t.has_item(s)||t._add_new_item(s)})},StandardCartDisplayItems.prototype._build_new_item=function(t){var e=$(this.$item_template.html());e.data(this.item_id_data,t.id).attr(this.item_id_data_attr,t.id),this.$items_wrapper.append(e),this._add_new_item(t.id),this.items[t.id].update(t)},module.exports=StandardCartDisplayItems;


},{"./_polyfills.js":11,"./phd.cart.standard_display_item.js":35}],37:[function(require,module,exports){
var Cookies=require("./_cookies.js"),StandardCartOffCanvas=function(t){if(this.cart_action_selector=t,this.offcanavs_class="offcanvas-open",this.$body=$("body"),this._add_event_listenters(),Cookies.hasItem("cart_state")){var a=Cookies.getItem("cart_state");this.toggle_draw(a)}};StandardCartOffCanvas.prototype.toggle_draw=function(t){void 0!==t&&void 0!==this[t+"_draw"]?this[t+"_draw"].apply(this):this.$body.hasClass(this.offcanavs_class)?this.close_draw():this.open_draw()},StandardCartOffCanvas.prototype.open_draw=function(){this.$body.addClass(this.offcanavs_class),Cookies.setItem("cart_state","open"),$(window).trigger("resize")},StandardCartOffCanvas.prototype.close_draw=function(){this.$body.removeClass(this.offcanavs_class),Cookies.setItem("cart_state","close"),$(window).trigger("resize")},StandardCartOffCanvas.prototype._add_event_listenters=function(){var t=this;$(document).on("click",this.cart_action_selector,function(a){a.preventDefault(),t.toggle_draw()})},module.exports=StandardCartOffCanvas;


},{"./_cookies.js":8}],38:[function(require,module,exports){
var PhdSticky=require("./phd.sticky.js"),PhdCart=require("./phd.cart.js"),Phd=function(){new PhdSticky,new PhdCart};module.exports=Phd;


},{"./phd.cart.js":24,"./phd.sticky.js":40}],39:[function(require,module,exports){
var DataModel=require("./_data_model.js"),PhdModal=function(t,e){this.callback_events=["on_open","on_close"],this.selector=e||"[data-bsify-modal]",this.$ele=$(this.selector),this.id=this._id(),new DataModel(this,{content:this.selector+" .modal-content"}),this._set_callbacks(t),this._add_event_listeners()};PhdModal.prototype.open=function(){this.$ele.modal(),this.$ele.data("modal_id",this.id),this.on_open&&this.on_open()},PhdModal.prototype.close=function(){this.$ele.modal("hide"),this.destroy()},PhdModal.prototype.destroy=function(){this.on_close&&this.on_close(),this.content="",this.$ele.data("bs.modal",null),this.$ele.data("modal_id",null)},PhdModal.prototype._add_event_listeners=function(){var t=this;this.$ele.on("hidden.bs.modal",function(){t.$ele.data("modal_id")===t.id&&t.destroy()})},PhdModal.prototype._set_callbacks=function(t){if(t)for(var e in this.callback_events){var o=this.callback_events[e];t[o]&&(this[o]=t[o])}},PhdModal.prototype._id=function(){return"_"+Math.random().toString(36).substr(2,9)},module.exports=PhdModal;


},{"./_data_model.js":9}],40:[function(require,module,exports){
var PhdSticky=function(){this.$ele=$('[data-phd="sticky"]'),this.$parent=this.$ele.parent(),this.parent_orig_margin_bottom=this.css_to_int(this.$parent,"margin-bottom");var t=this;t.$ele.length>0&&t.$ele.affix({offset:{top:t.$ele.offset().top,bottom:30},target:".offcanvas-main"}).on("affixed.bs.affix",function(){var i="relative"!==t.$ele.css("position")?t.parent_orig_margin_bottom+t.ele_height():t.parent_orig_margin_bottom;t.set_margin(i)}).on("affixed-top.bs.affix",function(){t.set_margin(t.parent_orig_margin_bottom)})};PhdSticky.prototype.set_margin=function(t){this.$parent.css({"margin-bottom":t})},PhdSticky.prototype.ele_height=function(t){return this.$ele.height()+this.css_to_int(this.$ele,"margin-top")+this.css_to_int(this.$ele,"margin-bottom")+this.css_to_int(this.$ele,"padding-top")+this.css_to_int(this.$ele,"padding-bottom")},PhdSticky.prototype.css_to_int=function(t,i){return parseInt(t.css(i))},module.exports=PhdSticky;


},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,
