/*
body {
  -webkit-font-smoothing: antialiased;
}
*/

.banner {
  // create the fade transition
  &.fade {
    opacity: 1;
  	.carousel-inner {
  		.item {
  			opacity: 0;
  			transition-property: opacity;
  		}
  		.active {
  			opacity: 1;
  		}
  		.active.left,
  		.active.right {
  			left: 0;
  			opacity: 0;
  			z-index: 1;
  		}
  		.next.left,
  		.prev.right {
  			opacity: 1;
  		}
  	}
  }
  
  // center images inside the banner
  img {
    margin: auto;
  }
}

// Banner controls
.carousel-control.left, .carousel-control.right {
  background-image: none;
  [class*=icon] {
    font-family: FontAwesome;
  }
}

{% comment %}
  Setup individual slide styles
{% endcomment %}

{% capture slides %}{% endcapture %}
{% for i in (1..5) %}
  
  {% comment %}
    Create the scss vars for each slides settings
  {% endcomment %}
  
  {% assign slide_count = forloop.index %}
  
  {% assign slide = 'banner_slide_' | append: slide_count %}
  {% assign slide_enabled_setting = slide | append: '_enabled' %}
  {% assign slide_size_setting = slide | append: '_size' %}
  {% assign slide_alignment_setting = slide | append: '_alignment' %}
  {% assign slide_vertical_alignment_setting = slide | append: '_vertical_alignment' %}
  {% assign slide_text_colour_setting = slide | append: '_text_colour' %}
  {% assign slide_button_colour_setting = slide | append: '_button_colour' %}
  {% assign slide_background_colour_setting = slide | append: '_background_colour' %}

  $slide-{{ slide_count }}-enabled: {{ settings[slide_enabled_setting] | default: 'false' }};
  $slide-{{ slide_count }}-size: {{ settings[slide_size_setting] | default: 'full_container' }};
  $slide-{{ slide_count }}-alignment: {{ settings[slide_alignment_setting] | default: 'center' }};
  $slide-{{ slide_count }}-vertical-alignment: {{ settings[slide_vertical_alignment_setting] | default: 'middle' }};
  $slide-{{ slide_count }}-text-colour: {{ settings[slide_text_colour_setting] | default: '$text-color' }};
  $slide-{{ slide_count }}-button-colour: {{ settings[slide_button_colour_setting] | default: '$btn-primary-bg' }};
  $slide-{{ slide_count }}-background-colour: {{ settings[slide_background_colour_setting] | default: 'transparent' }};
  
  {% comment %}
    Capture the scss vars for use with a scss array
  {% endcomment %}

  {% capture slides %}{{ slides }} ($slide-{{ slide_count }}-enabled $slide-{{ slide_count }}-size $slide-{{ slide_count }}-alignment $slide-{{ slide_count }}-vertical-alignment $slide-{{ slide_count }}-text-colour $slide-{{ slide_count }}-button-colour $slide-{{ slide_count }}-background-colour){% endcapture %}
{% endfor %}

// mixin for slides
@mixin slide($slide-count, $slide-size, $slide-alignment, $slide-vertical-alignment, $slide-text-colour, $slide-button-bg-colour, $slide-background-colour){
  [data-banner="#{$slide-count}"] {
    
    .banner-content-wrap {
      position: relative;
      @if $slide-size!= 'full_width' and $slide-size != 'full_screen' {
        @extend .sheet;
      }
    }
    
    @if $slide-size == 'half_container_left' or $slide-size == 'half_container_right' {
      .banner-content {
        @include make-row();
      }
      
      // cols
      .banner-caption, .banner-image {
        @include make-sm-column(6);
      }
      
      // vertical center banner caption
      @media (min-width: $grid-float-breakpoint) {
        .banner-caption {
          position: absolute;
        }
        .banner-image {
          float: right;
        }
      }
      
      @if $slide-size == 'half_container_left' {
        .banner-caption {
          @include make-sm-column-push(6);
        }
        .banner-image {
          @include make-sm-column-pull(6);
        }
      }
      
    } @else {
      .banner-caption {
        @extend .carousel-caption;
      }
    }
    
    .banner-caption {
      text-align: $slide-alignment;
      color: $slide-text-colour;
      
      @if $slide-vertical-alignment == 'top' {
        top: 20px;
        bottom: auto;
      } @else if $slide-vertical-alignment == 'bottom' {
        top: auto;
        bottom: 20px;
      } @else {
        top: 50%;
        bottom: auto;
        -webkit-transform: translateY(-50%);
        -moz-transform: translateY(-50%);
      	transform: translateY(-50%);
      }
      
      h1,
      h2,
      h3,
      h4,
      h5,
      h6 {
        color: $slide-text-colour;
      }
      .call-to-action {
        $slide-button-text-colour: button-text-color($slide-button-bg-colour);
        $slide-button-border-colour: border-color($slide-button-bg-colour);
        @include button-variant($slide-button-text-colour, $slide-button-bg-colour, $slide-button-border-colour);
      }
    }
    
    .item {
      background-color: $slide-background-colour;
    }
     
  }
}

{% unless slides == blank %}
// Styles for each slide
$slides: {{ slides }};
$slide-count: 1;

@each $slide in $slides {
  @if nth($slide, 1) == true {
    @include slide($slide-count, nth($slide, 2), nth($slide, 3), nth($slide, 4), nth($slide, 5), nth($slide, 6), nth($slide, 7));
    $slide-count: $slide-count + 1;
  }
}
{% endunless %}